{
    "name": "cratedb",
    "displayName": "cratedb",
    "description": "A Pulumi package for creating and managing CrateDB resources.",
    "keywords": [
        "pulumi",
        "cratedb",
        "category/database"
    ],
    "homepage": "https://www.cratedb.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`cratedb` Terraform Provider](https://github.com/komminarlabs/terraform-provider-cratedb).",
    "repository": "https://github.com/komminarlabs/pulumi-cratedb",
    "logoUrl": "https://avatars.githubusercontent.com/u/5713248?s=200\u0026v=4",
    "pluginDownloadURL": "github://api.github.com/komminarlabs",
    "publisher": "komminarlabs",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "namespaces": {
                "cratedb": "cratedb"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "KomminarLabs"
        },
        "go": {
            "importBasePath": "github.com/komminarlabs/pulumi-cratedb/sdk/go/cratedb",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@komminarlabs/cratedb",
            "packageDescription": "A Pulumi package for creating and managing CrateDB resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/komminarlabs/terraform-provider-cratedb)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-cratedb` repo](https://github.com/komminarlabs/pulumi-cratedb/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-cratedb` repo](https://github.com/komminarlabs/terraform-provider-cratedb/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "komminarlabs_cratedb",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/komminarlabs/terraform-provider-cratedb)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-cratedb` repo](https://github.com/komminarlabs/pulumi-cratedb/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-cratedb` repo](https://github.com/komminarlabs/terraform-provider-cratedb/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "The API key\n",
                "secret": true
            },
            "apiSecret": {
                "type": "string",
                "description": "The API secret\n",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "The CrateDB Cloud URL\n"
            }
        }
    },
    "types": {
        "cratedb:index/ClusterDc:ClusterDc": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The created time.\n"
                },
                "modified": {
                    "type": "string",
                    "description": "The modified time.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "created",
                        "modified"
                    ]
                }
            }
        },
        "cratedb:index/ClusterHardwareSpecs:ClusterHardwareSpecs": {
            "properties": {
                "cpusPerNode": {
                    "type": "number",
                    "description": "The cpus per node.\n"
                },
                "diskSizePerNodeBytes": {
                    "type": "integer",
                    "description": "The disk size per node in bytes.\n"
                },
                "diskType": {
                    "type": "string",
                    "description": "The disk type.\n"
                },
                "disksPerNode": {
                    "type": "number",
                    "description": "The disks per node.\n"
                },
                "heapSizeBytes": {
                    "type": "integer",
                    "description": "The heap size in bytes.\n"
                },
                "memoryPerNodeBytes": {
                    "type": "integer",
                    "description": "The memory per node in bytes.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cpusPerNode",
                        "diskSizePerNodeBytes",
                        "diskType",
                        "disksPerNode",
                        "heapSizeBytes",
                        "memoryPerNodeBytes"
                    ]
                }
            }
        },
        "cratedb:index/ClusterHealth:ClusterHealth": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The health status of the cluster.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "status"
                    ]
                }
            }
        },
        "cratedb:index/ClusterIpWhitelist:ClusterIpWhitelist": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "The CIDR.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cidr",
                        "description"
                    ]
                }
            }
        },
        "cratedb:index/OrganizationDc:OrganizationDc": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The created time.\n"
                },
                "modified": {
                    "type": "string",
                    "description": "The modified time.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "created",
                        "modified"
                    ]
                }
            }
        },
        "cratedb:index/ProjectDc:ProjectDc": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The created time.\n"
                },
                "modified": {
                    "type": "string",
                    "description": "The modified time.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "created",
                        "modified"
                    ]
                }
            }
        },
        "cratedb:index/getClusterDc:getClusterDc": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The created time.\n"
                },
                "modified": {
                    "type": "string",
                    "description": "The modified time.\n"
                }
            },
            "type": "object",
            "required": [
                "created",
                "modified"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cratedb:index/getClusterHardwareSpecs:getClusterHardwareSpecs": {
            "properties": {
                "cpusPerNode": {
                    "type": "number",
                    "description": "The cpus per node.\n"
                },
                "diskSizePerNodeBytes": {
                    "type": "integer",
                    "description": "The disk size per node in bytes.\n"
                },
                "diskType": {
                    "type": "string",
                    "description": "The disk type.\n"
                },
                "disksPerNode": {
                    "type": "number",
                    "description": "The disks per node.\n"
                },
                "heapSizeBytes": {
                    "type": "integer",
                    "description": "The heap size in bytes.\n"
                },
                "memoryPerNodeBytes": {
                    "type": "integer",
                    "description": "The memory per node in bytes.\n"
                }
            },
            "type": "object",
            "required": [
                "cpusPerNode",
                "diskSizePerNodeBytes",
                "diskType",
                "disksPerNode",
                "heapSizeBytes",
                "memoryPerNodeBytes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cratedb:index/getClusterHealth:getClusterHealth": {
            "properties": {
                "lastSeen": {
                    "type": "string",
                    "description": "The last seen time.\n"
                },
                "runningOperation": {
                    "type": "string",
                    "description": "The type of the currently running operation. Returns an empty string if there is no operation in progress.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The health status of the cluster.\n"
                }
            },
            "type": "object",
            "required": [
                "lastSeen",
                "runningOperation",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cratedb:index/getClusterIpWhitelist:getClusterIpWhitelist": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "The CIDR.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description.\n"
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "description"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cratedb:index/getClusterLastAsyncOperation:getClusterLastAsyncOperation": {
            "properties": {
                "dc": {
                    "$ref": "#/types/cratedb:index/getClusterLastAsyncOperationDc:getClusterLastAsyncOperationDc",
                    "description": "The DublinCore of the cluster.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The id of the last async operation.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the last async operation.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the last async operation.\n"
                }
            },
            "type": "object",
            "required": [
                "dc",
                "id",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cratedb:index/getClusterLastAsyncOperationDc:getClusterLastAsyncOperationDc": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The created time.\n"
                },
                "modified": {
                    "type": "string",
                    "description": "The modified time.\n"
                }
            },
            "type": "object",
            "required": [
                "created",
                "modified"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cratedb:index/getOrganizationDc:getOrganizationDc": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The created time.\n"
                },
                "modified": {
                    "type": "string",
                    "description": "The modified time.\n"
                }
            },
            "type": "object",
            "required": [
                "created",
                "modified"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cratedb:index/getOrganizationsOrganization:getOrganizationsOrganization": {
            "properties": {
                "dc": {
                    "$ref": "#/types/cratedb:index/getOrganizationsOrganizationDc:getOrganizationsOrganizationDc",
                    "description": "The DublinCore of the organization.\n"
                },
                "email": {
                    "type": "string",
                    "description": "The notification email used in the organization.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The id of the organization.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the organization.\n"
                },
                "notificationsEnabled": {
                    "type": "boolean",
                    "description": "Whether notifications enabled for the organization.\n"
                },
                "planType": {
                    "type": "number",
                    "description": "The support plan type used in the organization.\n"
                },
                "projectCount": {
                    "type": "number",
                    "description": "The project count in the organization.\n"
                },
                "roleFqn": {
                    "type": "string",
                    "description": "The role FQN.\n"
                }
            },
            "type": "object",
            "required": [
                "dc",
                "email",
                "id",
                "name",
                "notificationsEnabled",
                "planType",
                "projectCount",
                "roleFqn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cratedb:index/getOrganizationsOrganizationDc:getOrganizationsOrganizationDc": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The created time.\n"
                },
                "modified": {
                    "type": "string",
                    "description": "The modified time.\n"
                }
            },
            "type": "object",
            "required": [
                "created",
                "modified"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cratedb:index/getProjectDc:getProjectDc": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The created time.\n"
                },
                "modified": {
                    "type": "string",
                    "description": "The modified time.\n"
                }
            },
            "type": "object",
            "required": [
                "created",
                "modified"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the cratedb package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string",
                "description": "The API key\n",
                "secret": true
            },
            "apiSecret": {
                "type": "string",
                "description": "The API secret\n",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "The CrateDB Cloud URL\n"
            }
        },
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "The API key\n",
                "secret": true
            },
            "apiSecret": {
                "type": "string",
                "description": "The API secret\n",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "The CrateDB Cloud URL\n"
            }
        }
    },
    "resources": {
        "cratedb:index/cluster:Cluster": {
            "description": "Creates and manages a cluster.\n",
            "properties": {
                "allowCustomStorage": {
                    "type": "boolean",
                    "description": "The allow custom storage flag.\n"
                },
                "allowSuspend": {
                    "type": "boolean",
                    "description": "The allow suspend flag.\n"
                },
                "backupSchedule": {
                    "type": "string",
                    "description": "The backup schedule.\n"
                },
                "channel": {
                    "type": "string",
                    "description": "The channel of the cluster. Default is `stable`.\n"
                },
                "crateVersion": {
                    "type": "string",
                    "description": "The CrateDB version of the cluster.\n"
                },
                "dc": {
                    "$ref": "#/types/cratedb:index/ClusterDc:ClusterDc",
                    "description": "The DublinCore of the cluster.\n"
                },
                "deletionProtected": {
                    "type": "boolean",
                    "description": "The deletion protected flag.\n"
                },
                "externalIp": {
                    "type": "string",
                    "description": "The external IP address.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "The Fully Qualified Domain Name.\n"
                },
                "gcAvailable": {
                    "type": "boolean",
                    "description": "The garbage collection available flag.\n"
                },
                "hardwareSpecs": {
                    "$ref": "#/types/cratedb:index/ClusterHardwareSpecs:ClusterHardwareSpecs",
                    "description": "The hardware specs of the cluster.\n"
                },
                "health": {
                    "$ref": "#/types/cratedb:index/ClusterHealth:ClusterHealth",
                    "description": "The health of the cluster.\n"
                },
                "ipWhitelists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cratedb:index/ClusterIpWhitelist:ClusterIpWhitelist"
                    },
                    "description": "The IP whitelist of the cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cluster.\n"
                },
                "numNodes": {
                    "type": "number",
                    "description": "The number of nodes in the cluster.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization id of the cluster.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The origin of the cluster.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the cluster.\n",
                    "secret": true
                },
                "productName": {
                    "type": "string",
                    "description": "The product name of the cluster.\n"
                },
                "productTier": {
                    "type": "string",
                    "description": "The product tier of the cluster.\n"
                },
                "productUnit": {
                    "type": "number",
                    "description": "The product unit of the cluster. Default is `0`.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project id of the cluster.\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription id of the cluster.\n"
                },
                "suspended": {
                    "type": "boolean",
                    "description": "The suspended flag.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the cluster.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the cluster.\n"
                }
            },
            "required": [
                "allowCustomStorage",
                "allowSuspend",
                "backupSchedule",
                "channel",
                "crateVersion",
                "dc",
                "deletionProtected",
                "externalIp",
                "fqdn",
                "gcAvailable",
                "hardwareSpecs",
                "health",
                "ipWhitelists",
                "name",
                "numNodes",
                "organizationId",
                "origin",
                "password",
                "productName",
                "productTier",
                "productUnit",
                "projectId",
                "subscriptionId",
                "suspended",
                "url",
                "username"
            ],
            "inputProperties": {
                "channel": {
                    "type": "string",
                    "description": "The channel of the cluster. Default is `stable`.\n"
                },
                "crateVersion": {
                    "type": "string",
                    "description": "The CrateDB version of the cluster.\n"
                },
                "hardwareSpecs": {
                    "$ref": "#/types/cratedb:index/ClusterHardwareSpecs:ClusterHardwareSpecs",
                    "description": "The hardware specs of the cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cluster.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization id of the cluster.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the cluster.\n",
                    "secret": true
                },
                "productName": {
                    "type": "string",
                    "description": "The product name of the cluster.\n"
                },
                "productTier": {
                    "type": "string",
                    "description": "The product tier of the cluster.\n"
                },
                "productUnit": {
                    "type": "number",
                    "description": "The product unit of the cluster. Default is `0`.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project id of the cluster.\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription id of the cluster.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the cluster.\n"
                }
            },
            "requiredInputs": [
                "crateVersion",
                "organizationId",
                "password",
                "productName",
                "productTier",
                "projectId",
                "subscriptionId",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "allowCustomStorage": {
                        "type": "boolean",
                        "description": "The allow custom storage flag.\n"
                    },
                    "allowSuspend": {
                        "type": "boolean",
                        "description": "The allow suspend flag.\n"
                    },
                    "backupSchedule": {
                        "type": "string",
                        "description": "The backup schedule.\n"
                    },
                    "channel": {
                        "type": "string",
                        "description": "The channel of the cluster. Default is `stable`.\n"
                    },
                    "crateVersion": {
                        "type": "string",
                        "description": "The CrateDB version of the cluster.\n"
                    },
                    "dc": {
                        "$ref": "#/types/cratedb:index/ClusterDc:ClusterDc",
                        "description": "The DublinCore of the cluster.\n"
                    },
                    "deletionProtected": {
                        "type": "boolean",
                        "description": "The deletion protected flag.\n"
                    },
                    "externalIp": {
                        "type": "string",
                        "description": "The external IP address.\n"
                    },
                    "fqdn": {
                        "type": "string",
                        "description": "The Fully Qualified Domain Name.\n"
                    },
                    "gcAvailable": {
                        "type": "boolean",
                        "description": "The garbage collection available flag.\n"
                    },
                    "hardwareSpecs": {
                        "$ref": "#/types/cratedb:index/ClusterHardwareSpecs:ClusterHardwareSpecs",
                        "description": "The hardware specs of the cluster.\n"
                    },
                    "health": {
                        "$ref": "#/types/cratedb:index/ClusterHealth:ClusterHealth",
                        "description": "The health of the cluster.\n"
                    },
                    "ipWhitelists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cratedb:index/ClusterIpWhitelist:ClusterIpWhitelist"
                        },
                        "description": "The IP whitelist of the cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the cluster.\n"
                    },
                    "numNodes": {
                        "type": "number",
                        "description": "The number of nodes in the cluster.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization id of the cluster.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The origin of the cluster.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the cluster.\n",
                        "secret": true
                    },
                    "productName": {
                        "type": "string",
                        "description": "The product name of the cluster.\n"
                    },
                    "productTier": {
                        "type": "string",
                        "description": "The product tier of the cluster.\n"
                    },
                    "productUnit": {
                        "type": "number",
                        "description": "The product unit of the cluster. Default is `0`.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project id of the cluster.\n"
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "The subscription id of the cluster.\n"
                    },
                    "suspended": {
                        "type": "boolean",
                        "description": "The suspended flag.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the cluster.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the cluster.\n"
                    }
                },
                "type": "object"
            }
        },
        "cratedb:index/organization:Organization": {
            "description": "Creates and manages an organization.\n",
            "properties": {
                "dc": {
                    "$ref": "#/types/cratedb:index/OrganizationDc:OrganizationDc",
                    "description": "The DublinCore of the organization.\n"
                },
                "email": {
                    "type": "string",
                    "description": "The notification email used in the organization.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the organization.\n"
                },
                "notificationsEnabled": {
                    "type": "boolean",
                    "description": "Whether notifications enabled for the organization.\n"
                },
                "planType": {
                    "type": "number",
                    "description": "The support plan type used in the organization.\n"
                },
                "projectCount": {
                    "type": "number",
                    "description": "The project count in the organization.\n"
                },
                "roleFqn": {
                    "type": "string",
                    "description": "The role FQN.\n"
                }
            },
            "required": [
                "dc",
                "email",
                "name",
                "notificationsEnabled",
                "planType",
                "projectCount",
                "roleFqn"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the organization.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Organization resources.\n",
                "properties": {
                    "dc": {
                        "$ref": "#/types/cratedb:index/OrganizationDc:OrganizationDc",
                        "description": "The DublinCore of the organization.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "The notification email used in the organization.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the organization.\n"
                    },
                    "notificationsEnabled": {
                        "type": "boolean",
                        "description": "Whether notifications enabled for the organization.\n"
                    },
                    "planType": {
                        "type": "number",
                        "description": "The support plan type used in the organization.\n"
                    },
                    "projectCount": {
                        "type": "number",
                        "description": "The project count in the organization.\n"
                    },
                    "roleFqn": {
                        "type": "string",
                        "description": "The role FQN.\n"
                    }
                },
                "type": "object"
            }
        },
        "cratedb:index/project:Project": {
            "description": "Creates and manages a project.\n",
            "properties": {
                "dc": {
                    "$ref": "#/types/cratedb:index/ProjectDc:ProjectDc",
                    "description": "The DublinCore of the project.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the project.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization id of the project.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the project.\n"
                }
            },
            "required": [
                "dc",
                "name",
                "organizationId",
                "region"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the project.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization id of the project.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the project.\n"
                }
            },
            "requiredInputs": [
                "organizationId",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "dc": {
                        "$ref": "#/types/cratedb:index/ProjectDc:ProjectDc",
                        "description": "The DublinCore of the project.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the project.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization id of the project.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region of the project.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "cratedb:index/getCluster:getCluster": {
            "description": "To retrieve a cluster.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCluster.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the last async operation.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCluster.\n",
                "properties": {
                    "allowCustomStorage": {
                        "type": "boolean",
                        "description": "The allow custom storage flag.\n"
                    },
                    "allowSuspend": {
                        "type": "boolean",
                        "description": "The allow suspend flag.\n"
                    },
                    "backupSchedule": {
                        "type": "string",
                        "description": "The backup schedule.\n"
                    },
                    "channel": {
                        "type": "string",
                        "description": "The channel of the cluster.\n"
                    },
                    "crateVersion": {
                        "type": "string",
                        "description": "The CrateDB version of the cluster.\n"
                    },
                    "dc": {
                        "$ref": "#/types/cratedb:index/getClusterDc:getClusterDc",
                        "description": "The DublinCore of the cluster.\n"
                    },
                    "deletionProtected": {
                        "type": "boolean",
                        "description": "The deletion protected flag.\n"
                    },
                    "externalIp": {
                        "type": "string",
                        "description": "The external IP address.\n"
                    },
                    "fqdn": {
                        "type": "string",
                        "description": "The Fully Qualified Domain Name.\n"
                    },
                    "gcAvailable": {
                        "type": "boolean",
                        "description": "The garbage collection available flag.\n"
                    },
                    "hardwareSpecs": {
                        "$ref": "#/types/cratedb:index/getClusterHardwareSpecs:getClusterHardwareSpecs",
                        "description": "The hardware specs of the cluster.\n"
                    },
                    "health": {
                        "$ref": "#/types/cratedb:index/getClusterHealth:getClusterHealth",
                        "description": "The health of the cluster.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The id of the cluster.\n"
                    },
                    "ipWhitelists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cratedb:index/getClusterIpWhitelist:getClusterIpWhitelist"
                        },
                        "description": "The IP whitelist of the cluster.\n"
                    },
                    "lastAsyncOperation": {
                        "$ref": "#/types/cratedb:index/getClusterLastAsyncOperation:getClusterLastAsyncOperation",
                        "description": "The last async operation of the cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the cluster.\n"
                    },
                    "numNodes": {
                        "type": "number",
                        "description": "The number of nodes in the cluster.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The origin of the cluster.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the cluster.\n",
                        "secret": true
                    },
                    "productName": {
                        "type": "string",
                        "description": "The product name of the cluster.\n"
                    },
                    "productTier": {
                        "type": "string",
                        "description": "The product tier of the cluster.\n"
                    },
                    "productUnit": {
                        "type": "number",
                        "description": "The product unit of the cluster.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project id of the cluster.\n"
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "The subscription id of the cluster.\n"
                    },
                    "suspended": {
                        "type": "boolean",
                        "description": "The suspended flag.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the cluster.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the cluster.\n"
                    }
                },
                "type": "object",
                "required": [
                    "allowCustomStorage",
                    "allowSuspend",
                    "backupSchedule",
                    "channel",
                    "crateVersion",
                    "dc",
                    "deletionProtected",
                    "externalIp",
                    "fqdn",
                    "gcAvailable",
                    "hardwareSpecs",
                    "health",
                    "id",
                    "ipWhitelists",
                    "lastAsyncOperation",
                    "name",
                    "numNodes",
                    "origin",
                    "password",
                    "productName",
                    "productTier",
                    "productUnit",
                    "projectId",
                    "subscriptionId",
                    "suspended",
                    "url",
                    "username"
                ]
            }
        },
        "cratedb:index/getOrganization:getOrganization": {
            "description": "To retrieve an organization.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOrganization.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the organization.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOrganization.\n",
                "properties": {
                    "dc": {
                        "$ref": "#/types/cratedb:index/getOrganizationDc:getOrganizationDc",
                        "description": "The DublinCore of the organization.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "The notification email used in the organization.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The id of the organization.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the organization.\n"
                    },
                    "notificationsEnabled": {
                        "type": "boolean",
                        "description": "Whether notifications enabled for the organization.\n"
                    },
                    "planType": {
                        "type": "number",
                        "description": "The support plan type used in the organization.\n"
                    },
                    "projectCount": {
                        "type": "number",
                        "description": "The project count in the organization.\n"
                    },
                    "roleFqn": {
                        "type": "string",
                        "description": "The role FQN.\n"
                    }
                },
                "type": "object",
                "required": [
                    "dc",
                    "email",
                    "id",
                    "name",
                    "notificationsEnabled",
                    "planType",
                    "projectCount",
                    "roleFqn"
                ]
            }
        },
        "cratedb:index/getOrganizations:getOrganizations": {
            "description": "To retrieve all organizations.\n",
            "outputs": {
                "description": "A collection of values returned by getOrganizations.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "organizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cratedb:index/getOrganizationsOrganization:getOrganizationsOrganization"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "organizations",
                    "id"
                ]
            }
        },
        "cratedb:index/getProject:getProject": {
            "description": "To retrieve a project.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProject.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProject.\n",
                "properties": {
                    "dc": {
                        "$ref": "#/types/cratedb:index/getProjectDc:getProjectDc",
                        "description": "The DublinCore of the project.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The id of the project.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the project.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization id of the project.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region of the project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "dc",
                    "id",
                    "name",
                    "organizationId",
                    "region"
                ]
            }
        }
    }
}