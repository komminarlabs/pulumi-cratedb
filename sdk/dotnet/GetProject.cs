// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace KomminarLabs.cratedb
{
    public static class GetProject
    {
        /// <summary>
        /// To retrieve a project.
        /// </summary>
        public static Task<GetProjectResult> InvokeAsync(GetProjectArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectResult>("cratedb:index/getProject:getProject", args ?? new GetProjectArgs(), options.WithDefaults());

        /// <summary>
        /// To retrieve a project.
        /// </summary>
        public static Output<GetProjectResult> Invoke(GetProjectInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectResult>("cratedb:index/getProject:getProject", args ?? new GetProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the project.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetProjectArgs()
        {
        }
        public static new GetProjectArgs Empty => new GetProjectArgs();
    }

    public sealed class GetProjectInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the project.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetProjectInvokeArgs()
        {
        }
        public static new GetProjectInvokeArgs Empty => new GetProjectInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectResult
    {
        /// <summary>
        /// The DublinCore of the project.
        /// </summary>
        public readonly Outputs.GetProjectDcResult Dc;
        /// <summary>
        /// The id of the project.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the project.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The organization id of the project.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// The region of the project.
        /// </summary>
        public readonly string Region;

        [OutputConstructor]
        private GetProjectResult(
            Outputs.GetProjectDcResult dc,

            string id,

            string name,

            string organizationId,

            string region)
        {
            Dc = dc;
            Id = id;
            Name = name;
            OrganizationId = organizationId;
            Region = region;
        }
    }
}
