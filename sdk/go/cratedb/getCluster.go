// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cratedb

import (
	"context"
	"reflect"

	"github.com/komminarlabs/pulumi-cratedb/sdk/go/cratedb/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// To retrieve a cluster.
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("cratedb:index/getCluster:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCluster.
type LookupClusterArgs struct {
	// The id of the cluster.
	Id string `pulumi:"id"`
}

// A collection of values returned by getCluster.
type LookupClusterResult struct {
	// The allow custom storage flag.
	AllowCustomStorage bool `pulumi:"allowCustomStorage"`
	// The allow suspend flag.
	AllowSuspend bool `pulumi:"allowSuspend"`
	// The backup schedule.
	BackupSchedule string `pulumi:"backupSchedule"`
	// The channel of the cluster.
	Channel string `pulumi:"channel"`
	// The CrateDB version of the cluster.
	CrateVersion string `pulumi:"crateVersion"`
	// The DublinCore of the cluster.
	Dc GetClusterDc `pulumi:"dc"`
	// The deletion protected flag.
	DeletionProtected bool `pulumi:"deletionProtected"`
	// The external IP address.
	ExternalIp string `pulumi:"externalIp"`
	// The Fully Qualified Domain Name.
	Fqdn string `pulumi:"fqdn"`
	// The garbage collection available flag.
	GcAvailable bool `pulumi:"gcAvailable"`
	// The hardware specs of the cluster.
	HardwareSpecs GetClusterHardwareSpecs `pulumi:"hardwareSpecs"`
	// The health of the cluster.
	Health GetClusterHealth `pulumi:"health"`
	// The id of the cluster.
	Id string `pulumi:"id"`
	// The IP whitelist of the cluster.
	IpWhitelists []GetClusterIpWhitelist `pulumi:"ipWhitelists"`
	// The last async operation of the cluster.
	LastAsyncOperation GetClusterLastAsyncOperation `pulumi:"lastAsyncOperation"`
	// The name of the cluster.
	Name string `pulumi:"name"`
	// The number of nodes in the cluster.
	NumNodes int `pulumi:"numNodes"`
	// The origin of the cluster.
	Origin string `pulumi:"origin"`
	// The password of the cluster.
	Password string `pulumi:"password"`
	// The product name of the cluster.
	ProductName string `pulumi:"productName"`
	// The product tier of the cluster.
	ProductTier string `pulumi:"productTier"`
	// The product unit of the cluster.
	ProductUnit int `pulumi:"productUnit"`
	// The project id of the cluster.
	ProjectId string `pulumi:"projectId"`
	// The subscription id of the cluster.
	SubscriptionId string `pulumi:"subscriptionId"`
	// The suspended flag.
	Suspended bool `pulumi:"suspended"`
	// The URL of the cluster.
	Url string `pulumi:"url"`
	// The username of the cluster.
	Username string `pulumi:"username"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClusterResultOutput, error) {
			args := v.(LookupClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cratedb:index/getCluster:getCluster", args, LookupClusterResultOutput{}, options).(LookupClusterResultOutput), nil
		}).(LookupClusterResultOutput)
}

// A collection of arguments for invoking getCluster.
type LookupClusterOutputArgs struct {
	// The id of the cluster.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCluster.
type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

// The allow custom storage flag.
func (o LookupClusterResultOutput) AllowCustomStorage() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClusterResult) bool { return v.AllowCustomStorage }).(pulumi.BoolOutput)
}

// The allow suspend flag.
func (o LookupClusterResultOutput) AllowSuspend() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClusterResult) bool { return v.AllowSuspend }).(pulumi.BoolOutput)
}

// The backup schedule.
func (o LookupClusterResultOutput) BackupSchedule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.BackupSchedule }).(pulumi.StringOutput)
}

// The channel of the cluster.
func (o LookupClusterResultOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Channel }).(pulumi.StringOutput)
}

// The CrateDB version of the cluster.
func (o LookupClusterResultOutput) CrateVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.CrateVersion }).(pulumi.StringOutput)
}

// The DublinCore of the cluster.
func (o LookupClusterResultOutput) Dc() GetClusterDcOutput {
	return o.ApplyT(func(v LookupClusterResult) GetClusterDc { return v.Dc }).(GetClusterDcOutput)
}

// The deletion protected flag.
func (o LookupClusterResultOutput) DeletionProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClusterResult) bool { return v.DeletionProtected }).(pulumi.BoolOutput)
}

// The external IP address.
func (o LookupClusterResultOutput) ExternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ExternalIp }).(pulumi.StringOutput)
}

// The Fully Qualified Domain Name.
func (o LookupClusterResultOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The garbage collection available flag.
func (o LookupClusterResultOutput) GcAvailable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClusterResult) bool { return v.GcAvailable }).(pulumi.BoolOutput)
}

// The hardware specs of the cluster.
func (o LookupClusterResultOutput) HardwareSpecs() GetClusterHardwareSpecsOutput {
	return o.ApplyT(func(v LookupClusterResult) GetClusterHardwareSpecs { return v.HardwareSpecs }).(GetClusterHardwareSpecsOutput)
}

// The health of the cluster.
func (o LookupClusterResultOutput) Health() GetClusterHealthOutput {
	return o.ApplyT(func(v LookupClusterResult) GetClusterHealth { return v.Health }).(GetClusterHealthOutput)
}

// The id of the cluster.
func (o LookupClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// The IP whitelist of the cluster.
func (o LookupClusterResultOutput) IpWhitelists() GetClusterIpWhitelistArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterIpWhitelist { return v.IpWhitelists }).(GetClusterIpWhitelistArrayOutput)
}

// The last async operation of the cluster.
func (o LookupClusterResultOutput) LastAsyncOperation() GetClusterLastAsyncOperationOutput {
	return o.ApplyT(func(v LookupClusterResult) GetClusterLastAsyncOperation { return v.LastAsyncOperation }).(GetClusterLastAsyncOperationOutput)
}

// The name of the cluster.
func (o LookupClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// The number of nodes in the cluster.
func (o LookupClusterResultOutput) NumNodes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterResult) int { return v.NumNodes }).(pulumi.IntOutput)
}

// The origin of the cluster.
func (o LookupClusterResultOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Origin }).(pulumi.StringOutput)
}

// The password of the cluster.
func (o LookupClusterResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Password }).(pulumi.StringOutput)
}

// The product name of the cluster.
func (o LookupClusterResultOutput) ProductName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ProductName }).(pulumi.StringOutput)
}

// The product tier of the cluster.
func (o LookupClusterResultOutput) ProductTier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ProductTier }).(pulumi.StringOutput)
}

// The product unit of the cluster.
func (o LookupClusterResultOutput) ProductUnit() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterResult) int { return v.ProductUnit }).(pulumi.IntOutput)
}

// The project id of the cluster.
func (o LookupClusterResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The subscription id of the cluster.
func (o LookupClusterResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// The suspended flag.
func (o LookupClusterResultOutput) Suspended() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClusterResult) bool { return v.Suspended }).(pulumi.BoolOutput)
}

// The URL of the cluster.
func (o LookupClusterResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Url }).(pulumi.StringOutput)
}

// The username of the cluster.
func (o LookupClusterResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
