// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cratedb

import (
	"context"
	"reflect"

	"github.com/komminarlabs/pulumi-cratedb/sdk/go/cratedb/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterDc struct {
	// The created time.
	Created *string `pulumi:"created"`
	// The modified time.
	Modified *string `pulumi:"modified"`
}

// ClusterDcInput is an input type that accepts ClusterDcArgs and ClusterDcOutput values.
// You can construct a concrete instance of `ClusterDcInput` via:
//
//	ClusterDcArgs{...}
type ClusterDcInput interface {
	pulumi.Input

	ToClusterDcOutput() ClusterDcOutput
	ToClusterDcOutputWithContext(context.Context) ClusterDcOutput
}

type ClusterDcArgs struct {
	// The created time.
	Created pulumi.StringPtrInput `pulumi:"created"`
	// The modified time.
	Modified pulumi.StringPtrInput `pulumi:"modified"`
}

func (ClusterDcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDc)(nil)).Elem()
}

func (i ClusterDcArgs) ToClusterDcOutput() ClusterDcOutput {
	return i.ToClusterDcOutputWithContext(context.Background())
}

func (i ClusterDcArgs) ToClusterDcOutputWithContext(ctx context.Context) ClusterDcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDcOutput)
}

func (i ClusterDcArgs) ToClusterDcPtrOutput() ClusterDcPtrOutput {
	return i.ToClusterDcPtrOutputWithContext(context.Background())
}

func (i ClusterDcArgs) ToClusterDcPtrOutputWithContext(ctx context.Context) ClusterDcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDcOutput).ToClusterDcPtrOutputWithContext(ctx)
}

// ClusterDcPtrInput is an input type that accepts ClusterDcArgs, ClusterDcPtr and ClusterDcPtrOutput values.
// You can construct a concrete instance of `ClusterDcPtrInput` via:
//
//	        ClusterDcArgs{...}
//
//	or:
//
//	        nil
type ClusterDcPtrInput interface {
	pulumi.Input

	ToClusterDcPtrOutput() ClusterDcPtrOutput
	ToClusterDcPtrOutputWithContext(context.Context) ClusterDcPtrOutput
}

type clusterDcPtrType ClusterDcArgs

func ClusterDcPtr(v *ClusterDcArgs) ClusterDcPtrInput {
	return (*clusterDcPtrType)(v)
}

func (*clusterDcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDc)(nil)).Elem()
}

func (i *clusterDcPtrType) ToClusterDcPtrOutput() ClusterDcPtrOutput {
	return i.ToClusterDcPtrOutputWithContext(context.Background())
}

func (i *clusterDcPtrType) ToClusterDcPtrOutputWithContext(ctx context.Context) ClusterDcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDcPtrOutput)
}

type ClusterDcOutput struct{ *pulumi.OutputState }

func (ClusterDcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDc)(nil)).Elem()
}

func (o ClusterDcOutput) ToClusterDcOutput() ClusterDcOutput {
	return o
}

func (o ClusterDcOutput) ToClusterDcOutputWithContext(ctx context.Context) ClusterDcOutput {
	return o
}

func (o ClusterDcOutput) ToClusterDcPtrOutput() ClusterDcPtrOutput {
	return o.ToClusterDcPtrOutputWithContext(context.Background())
}

func (o ClusterDcOutput) ToClusterDcPtrOutputWithContext(ctx context.Context) ClusterDcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterDc) *ClusterDc {
		return &v
	}).(ClusterDcPtrOutput)
}

// The created time.
func (o ClusterDcOutput) Created() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDc) *string { return v.Created }).(pulumi.StringPtrOutput)
}

// The modified time.
func (o ClusterDcOutput) Modified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDc) *string { return v.Modified }).(pulumi.StringPtrOutput)
}

type ClusterDcPtrOutput struct{ *pulumi.OutputState }

func (ClusterDcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDc)(nil)).Elem()
}

func (o ClusterDcPtrOutput) ToClusterDcPtrOutput() ClusterDcPtrOutput {
	return o
}

func (o ClusterDcPtrOutput) ToClusterDcPtrOutputWithContext(ctx context.Context) ClusterDcPtrOutput {
	return o
}

func (o ClusterDcPtrOutput) Elem() ClusterDcOutput {
	return o.ApplyT(func(v *ClusterDc) ClusterDc {
		if v != nil {
			return *v
		}
		var ret ClusterDc
		return ret
	}).(ClusterDcOutput)
}

// The created time.
func (o ClusterDcPtrOutput) Created() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDc) *string {
		if v == nil {
			return nil
		}
		return v.Created
	}).(pulumi.StringPtrOutput)
}

// The modified time.
func (o ClusterDcPtrOutput) Modified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDc) *string {
		if v == nil {
			return nil
		}
		return v.Modified
	}).(pulumi.StringPtrOutput)
}

type ClusterHardwareSpecs struct {
	// The cpus per node.
	CpusPerNode *int `pulumi:"cpusPerNode"`
	// The disk size per node in bytes.
	DiskSizePerNodeBytes *int `pulumi:"diskSizePerNodeBytes"`
	// The disk type.
	DiskType *string `pulumi:"diskType"`
	// The disks per node.
	DisksPerNode *int `pulumi:"disksPerNode"`
	// The heap size in bytes.
	HeapSizeBytes *int `pulumi:"heapSizeBytes"`
	// The memory per node in bytes.
	MemoryPerNodeBytes *int `pulumi:"memoryPerNodeBytes"`
}

// ClusterHardwareSpecsInput is an input type that accepts ClusterHardwareSpecsArgs and ClusterHardwareSpecsOutput values.
// You can construct a concrete instance of `ClusterHardwareSpecsInput` via:
//
//	ClusterHardwareSpecsArgs{...}
type ClusterHardwareSpecsInput interface {
	pulumi.Input

	ToClusterHardwareSpecsOutput() ClusterHardwareSpecsOutput
	ToClusterHardwareSpecsOutputWithContext(context.Context) ClusterHardwareSpecsOutput
}

type ClusterHardwareSpecsArgs struct {
	// The cpus per node.
	CpusPerNode pulumi.IntPtrInput `pulumi:"cpusPerNode"`
	// The disk size per node in bytes.
	DiskSizePerNodeBytes pulumi.IntPtrInput `pulumi:"diskSizePerNodeBytes"`
	// The disk type.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// The disks per node.
	DisksPerNode pulumi.IntPtrInput `pulumi:"disksPerNode"`
	// The heap size in bytes.
	HeapSizeBytes pulumi.IntPtrInput `pulumi:"heapSizeBytes"`
	// The memory per node in bytes.
	MemoryPerNodeBytes pulumi.IntPtrInput `pulumi:"memoryPerNodeBytes"`
}

func (ClusterHardwareSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterHardwareSpecs)(nil)).Elem()
}

func (i ClusterHardwareSpecsArgs) ToClusterHardwareSpecsOutput() ClusterHardwareSpecsOutput {
	return i.ToClusterHardwareSpecsOutputWithContext(context.Background())
}

func (i ClusterHardwareSpecsArgs) ToClusterHardwareSpecsOutputWithContext(ctx context.Context) ClusterHardwareSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHardwareSpecsOutput)
}

func (i ClusterHardwareSpecsArgs) ToClusterHardwareSpecsPtrOutput() ClusterHardwareSpecsPtrOutput {
	return i.ToClusterHardwareSpecsPtrOutputWithContext(context.Background())
}

func (i ClusterHardwareSpecsArgs) ToClusterHardwareSpecsPtrOutputWithContext(ctx context.Context) ClusterHardwareSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHardwareSpecsOutput).ToClusterHardwareSpecsPtrOutputWithContext(ctx)
}

// ClusterHardwareSpecsPtrInput is an input type that accepts ClusterHardwareSpecsArgs, ClusterHardwareSpecsPtr and ClusterHardwareSpecsPtrOutput values.
// You can construct a concrete instance of `ClusterHardwareSpecsPtrInput` via:
//
//	        ClusterHardwareSpecsArgs{...}
//
//	or:
//
//	        nil
type ClusterHardwareSpecsPtrInput interface {
	pulumi.Input

	ToClusterHardwareSpecsPtrOutput() ClusterHardwareSpecsPtrOutput
	ToClusterHardwareSpecsPtrOutputWithContext(context.Context) ClusterHardwareSpecsPtrOutput
}

type clusterHardwareSpecsPtrType ClusterHardwareSpecsArgs

func ClusterHardwareSpecsPtr(v *ClusterHardwareSpecsArgs) ClusterHardwareSpecsPtrInput {
	return (*clusterHardwareSpecsPtrType)(v)
}

func (*clusterHardwareSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterHardwareSpecs)(nil)).Elem()
}

func (i *clusterHardwareSpecsPtrType) ToClusterHardwareSpecsPtrOutput() ClusterHardwareSpecsPtrOutput {
	return i.ToClusterHardwareSpecsPtrOutputWithContext(context.Background())
}

func (i *clusterHardwareSpecsPtrType) ToClusterHardwareSpecsPtrOutputWithContext(ctx context.Context) ClusterHardwareSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHardwareSpecsPtrOutput)
}

type ClusterHardwareSpecsOutput struct{ *pulumi.OutputState }

func (ClusterHardwareSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterHardwareSpecs)(nil)).Elem()
}

func (o ClusterHardwareSpecsOutput) ToClusterHardwareSpecsOutput() ClusterHardwareSpecsOutput {
	return o
}

func (o ClusterHardwareSpecsOutput) ToClusterHardwareSpecsOutputWithContext(ctx context.Context) ClusterHardwareSpecsOutput {
	return o
}

func (o ClusterHardwareSpecsOutput) ToClusterHardwareSpecsPtrOutput() ClusterHardwareSpecsPtrOutput {
	return o.ToClusterHardwareSpecsPtrOutputWithContext(context.Background())
}

func (o ClusterHardwareSpecsOutput) ToClusterHardwareSpecsPtrOutputWithContext(ctx context.Context) ClusterHardwareSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterHardwareSpecs) *ClusterHardwareSpecs {
		return &v
	}).(ClusterHardwareSpecsPtrOutput)
}

// The cpus per node.
func (o ClusterHardwareSpecsOutput) CpusPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterHardwareSpecs) *int { return v.CpusPerNode }).(pulumi.IntPtrOutput)
}

// The disk size per node in bytes.
func (o ClusterHardwareSpecsOutput) DiskSizePerNodeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterHardwareSpecs) *int { return v.DiskSizePerNodeBytes }).(pulumi.IntPtrOutput)
}

// The disk type.
func (o ClusterHardwareSpecsOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHardwareSpecs) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The disks per node.
func (o ClusterHardwareSpecsOutput) DisksPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterHardwareSpecs) *int { return v.DisksPerNode }).(pulumi.IntPtrOutput)
}

// The heap size in bytes.
func (o ClusterHardwareSpecsOutput) HeapSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterHardwareSpecs) *int { return v.HeapSizeBytes }).(pulumi.IntPtrOutput)
}

// The memory per node in bytes.
func (o ClusterHardwareSpecsOutput) MemoryPerNodeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterHardwareSpecs) *int { return v.MemoryPerNodeBytes }).(pulumi.IntPtrOutput)
}

type ClusterHardwareSpecsPtrOutput struct{ *pulumi.OutputState }

func (ClusterHardwareSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterHardwareSpecs)(nil)).Elem()
}

func (o ClusterHardwareSpecsPtrOutput) ToClusterHardwareSpecsPtrOutput() ClusterHardwareSpecsPtrOutput {
	return o
}

func (o ClusterHardwareSpecsPtrOutput) ToClusterHardwareSpecsPtrOutputWithContext(ctx context.Context) ClusterHardwareSpecsPtrOutput {
	return o
}

func (o ClusterHardwareSpecsPtrOutput) Elem() ClusterHardwareSpecsOutput {
	return o.ApplyT(func(v *ClusterHardwareSpecs) ClusterHardwareSpecs {
		if v != nil {
			return *v
		}
		var ret ClusterHardwareSpecs
		return ret
	}).(ClusterHardwareSpecsOutput)
}

// The cpus per node.
func (o ClusterHardwareSpecsPtrOutput) CpusPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterHardwareSpecs) *int {
		if v == nil {
			return nil
		}
		return v.CpusPerNode
	}).(pulumi.IntPtrOutput)
}

// The disk size per node in bytes.
func (o ClusterHardwareSpecsPtrOutput) DiskSizePerNodeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterHardwareSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizePerNodeBytes
	}).(pulumi.IntPtrOutput)
}

// The disk type.
func (o ClusterHardwareSpecsPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterHardwareSpecs) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// The disks per node.
func (o ClusterHardwareSpecsPtrOutput) DisksPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterHardwareSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DisksPerNode
	}).(pulumi.IntPtrOutput)
}

// The heap size in bytes.
func (o ClusterHardwareSpecsPtrOutput) HeapSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterHardwareSpecs) *int {
		if v == nil {
			return nil
		}
		return v.HeapSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The memory per node in bytes.
func (o ClusterHardwareSpecsPtrOutput) MemoryPerNodeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterHardwareSpecs) *int {
		if v == nil {
			return nil
		}
		return v.MemoryPerNodeBytes
	}).(pulumi.IntPtrOutput)
}

type ClusterHealth struct {
	// The health status of the cluster.
	Status *string `pulumi:"status"`
}

// ClusterHealthInput is an input type that accepts ClusterHealthArgs and ClusterHealthOutput values.
// You can construct a concrete instance of `ClusterHealthInput` via:
//
//	ClusterHealthArgs{...}
type ClusterHealthInput interface {
	pulumi.Input

	ToClusterHealthOutput() ClusterHealthOutput
	ToClusterHealthOutputWithContext(context.Context) ClusterHealthOutput
}

type ClusterHealthArgs struct {
	// The health status of the cluster.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ClusterHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterHealth)(nil)).Elem()
}

func (i ClusterHealthArgs) ToClusterHealthOutput() ClusterHealthOutput {
	return i.ToClusterHealthOutputWithContext(context.Background())
}

func (i ClusterHealthArgs) ToClusterHealthOutputWithContext(ctx context.Context) ClusterHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHealthOutput)
}

func (i ClusterHealthArgs) ToClusterHealthPtrOutput() ClusterHealthPtrOutput {
	return i.ToClusterHealthPtrOutputWithContext(context.Background())
}

func (i ClusterHealthArgs) ToClusterHealthPtrOutputWithContext(ctx context.Context) ClusterHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHealthOutput).ToClusterHealthPtrOutputWithContext(ctx)
}

// ClusterHealthPtrInput is an input type that accepts ClusterHealthArgs, ClusterHealthPtr and ClusterHealthPtrOutput values.
// You can construct a concrete instance of `ClusterHealthPtrInput` via:
//
//	        ClusterHealthArgs{...}
//
//	or:
//
//	        nil
type ClusterHealthPtrInput interface {
	pulumi.Input

	ToClusterHealthPtrOutput() ClusterHealthPtrOutput
	ToClusterHealthPtrOutputWithContext(context.Context) ClusterHealthPtrOutput
}

type clusterHealthPtrType ClusterHealthArgs

func ClusterHealthPtr(v *ClusterHealthArgs) ClusterHealthPtrInput {
	return (*clusterHealthPtrType)(v)
}

func (*clusterHealthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterHealth)(nil)).Elem()
}

func (i *clusterHealthPtrType) ToClusterHealthPtrOutput() ClusterHealthPtrOutput {
	return i.ToClusterHealthPtrOutputWithContext(context.Background())
}

func (i *clusterHealthPtrType) ToClusterHealthPtrOutputWithContext(ctx context.Context) ClusterHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHealthPtrOutput)
}

type ClusterHealthOutput struct{ *pulumi.OutputState }

func (ClusterHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterHealth)(nil)).Elem()
}

func (o ClusterHealthOutput) ToClusterHealthOutput() ClusterHealthOutput {
	return o
}

func (o ClusterHealthOutput) ToClusterHealthOutputWithContext(ctx context.Context) ClusterHealthOutput {
	return o
}

func (o ClusterHealthOutput) ToClusterHealthPtrOutput() ClusterHealthPtrOutput {
	return o.ToClusterHealthPtrOutputWithContext(context.Background())
}

func (o ClusterHealthOutput) ToClusterHealthPtrOutputWithContext(ctx context.Context) ClusterHealthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterHealth) *ClusterHealth {
		return &v
	}).(ClusterHealthPtrOutput)
}

// The health status of the cluster.
func (o ClusterHealthOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHealth) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ClusterHealthPtrOutput struct{ *pulumi.OutputState }

func (ClusterHealthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterHealth)(nil)).Elem()
}

func (o ClusterHealthPtrOutput) ToClusterHealthPtrOutput() ClusterHealthPtrOutput {
	return o
}

func (o ClusterHealthPtrOutput) ToClusterHealthPtrOutputWithContext(ctx context.Context) ClusterHealthPtrOutput {
	return o
}

func (o ClusterHealthPtrOutput) Elem() ClusterHealthOutput {
	return o.ApplyT(func(v *ClusterHealth) ClusterHealth {
		if v != nil {
			return *v
		}
		var ret ClusterHealth
		return ret
	}).(ClusterHealthOutput)
}

// The health status of the cluster.
func (o ClusterHealthPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterHealth) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ClusterIpWhitelist struct {
	// The CIDR.
	Cidr *string `pulumi:"cidr"`
	// The description.
	Description *string `pulumi:"description"`
}

// ClusterIpWhitelistInput is an input type that accepts ClusterIpWhitelistArgs and ClusterIpWhitelistOutput values.
// You can construct a concrete instance of `ClusterIpWhitelistInput` via:
//
//	ClusterIpWhitelistArgs{...}
type ClusterIpWhitelistInput interface {
	pulumi.Input

	ToClusterIpWhitelistOutput() ClusterIpWhitelistOutput
	ToClusterIpWhitelistOutputWithContext(context.Context) ClusterIpWhitelistOutput
}

type ClusterIpWhitelistArgs struct {
	// The CIDR.
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// The description.
	Description pulumi.StringPtrInput `pulumi:"description"`
}

func (ClusterIpWhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpWhitelist)(nil)).Elem()
}

func (i ClusterIpWhitelistArgs) ToClusterIpWhitelistOutput() ClusterIpWhitelistOutput {
	return i.ToClusterIpWhitelistOutputWithContext(context.Background())
}

func (i ClusterIpWhitelistArgs) ToClusterIpWhitelistOutputWithContext(ctx context.Context) ClusterIpWhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpWhitelistOutput)
}

// ClusterIpWhitelistArrayInput is an input type that accepts ClusterIpWhitelistArray and ClusterIpWhitelistArrayOutput values.
// You can construct a concrete instance of `ClusterIpWhitelistArrayInput` via:
//
//	ClusterIpWhitelistArray{ ClusterIpWhitelistArgs{...} }
type ClusterIpWhitelistArrayInput interface {
	pulumi.Input

	ToClusterIpWhitelistArrayOutput() ClusterIpWhitelistArrayOutput
	ToClusterIpWhitelistArrayOutputWithContext(context.Context) ClusterIpWhitelistArrayOutput
}

type ClusterIpWhitelistArray []ClusterIpWhitelistInput

func (ClusterIpWhitelistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIpWhitelist)(nil)).Elem()
}

func (i ClusterIpWhitelistArray) ToClusterIpWhitelistArrayOutput() ClusterIpWhitelistArrayOutput {
	return i.ToClusterIpWhitelistArrayOutputWithContext(context.Background())
}

func (i ClusterIpWhitelistArray) ToClusterIpWhitelistArrayOutputWithContext(ctx context.Context) ClusterIpWhitelistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpWhitelistArrayOutput)
}

type ClusterIpWhitelistOutput struct{ *pulumi.OutputState }

func (ClusterIpWhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpWhitelist)(nil)).Elem()
}

func (o ClusterIpWhitelistOutput) ToClusterIpWhitelistOutput() ClusterIpWhitelistOutput {
	return o
}

func (o ClusterIpWhitelistOutput) ToClusterIpWhitelistOutputWithContext(ctx context.Context) ClusterIpWhitelistOutput {
	return o
}

// The CIDR.
func (o ClusterIpWhitelistOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpWhitelist) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

// The description.
func (o ClusterIpWhitelistOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpWhitelist) *string { return v.Description }).(pulumi.StringPtrOutput)
}

type ClusterIpWhitelistArrayOutput struct{ *pulumi.OutputState }

func (ClusterIpWhitelistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIpWhitelist)(nil)).Elem()
}

func (o ClusterIpWhitelistArrayOutput) ToClusterIpWhitelistArrayOutput() ClusterIpWhitelistArrayOutput {
	return o
}

func (o ClusterIpWhitelistArrayOutput) ToClusterIpWhitelistArrayOutputWithContext(ctx context.Context) ClusterIpWhitelistArrayOutput {
	return o
}

func (o ClusterIpWhitelistArrayOutput) Index(i pulumi.IntInput) ClusterIpWhitelistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIpWhitelist {
		return vs[0].([]ClusterIpWhitelist)[vs[1].(int)]
	}).(ClusterIpWhitelistOutput)
}

type OrganizationDc struct {
	// The created time.
	Created *string `pulumi:"created"`
	// The modified time.
	Modified *string `pulumi:"modified"`
}

// OrganizationDcInput is an input type that accepts OrganizationDcArgs and OrganizationDcOutput values.
// You can construct a concrete instance of `OrganizationDcInput` via:
//
//	OrganizationDcArgs{...}
type OrganizationDcInput interface {
	pulumi.Input

	ToOrganizationDcOutput() OrganizationDcOutput
	ToOrganizationDcOutputWithContext(context.Context) OrganizationDcOutput
}

type OrganizationDcArgs struct {
	// The created time.
	Created pulumi.StringPtrInput `pulumi:"created"`
	// The modified time.
	Modified pulumi.StringPtrInput `pulumi:"modified"`
}

func (OrganizationDcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationDc)(nil)).Elem()
}

func (i OrganizationDcArgs) ToOrganizationDcOutput() OrganizationDcOutput {
	return i.ToOrganizationDcOutputWithContext(context.Background())
}

func (i OrganizationDcArgs) ToOrganizationDcOutputWithContext(ctx context.Context) OrganizationDcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDcOutput)
}

func (i OrganizationDcArgs) ToOrganizationDcPtrOutput() OrganizationDcPtrOutput {
	return i.ToOrganizationDcPtrOutputWithContext(context.Background())
}

func (i OrganizationDcArgs) ToOrganizationDcPtrOutputWithContext(ctx context.Context) OrganizationDcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDcOutput).ToOrganizationDcPtrOutputWithContext(ctx)
}

// OrganizationDcPtrInput is an input type that accepts OrganizationDcArgs, OrganizationDcPtr and OrganizationDcPtrOutput values.
// You can construct a concrete instance of `OrganizationDcPtrInput` via:
//
//	        OrganizationDcArgs{...}
//
//	or:
//
//	        nil
type OrganizationDcPtrInput interface {
	pulumi.Input

	ToOrganizationDcPtrOutput() OrganizationDcPtrOutput
	ToOrganizationDcPtrOutputWithContext(context.Context) OrganizationDcPtrOutput
}

type organizationDcPtrType OrganizationDcArgs

func OrganizationDcPtr(v *OrganizationDcArgs) OrganizationDcPtrInput {
	return (*organizationDcPtrType)(v)
}

func (*organizationDcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationDc)(nil)).Elem()
}

func (i *organizationDcPtrType) ToOrganizationDcPtrOutput() OrganizationDcPtrOutput {
	return i.ToOrganizationDcPtrOutputWithContext(context.Background())
}

func (i *organizationDcPtrType) ToOrganizationDcPtrOutputWithContext(ctx context.Context) OrganizationDcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDcPtrOutput)
}

type OrganizationDcOutput struct{ *pulumi.OutputState }

func (OrganizationDcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationDc)(nil)).Elem()
}

func (o OrganizationDcOutput) ToOrganizationDcOutput() OrganizationDcOutput {
	return o
}

func (o OrganizationDcOutput) ToOrganizationDcOutputWithContext(ctx context.Context) OrganizationDcOutput {
	return o
}

func (o OrganizationDcOutput) ToOrganizationDcPtrOutput() OrganizationDcPtrOutput {
	return o.ToOrganizationDcPtrOutputWithContext(context.Background())
}

func (o OrganizationDcOutput) ToOrganizationDcPtrOutputWithContext(ctx context.Context) OrganizationDcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationDc) *OrganizationDc {
		return &v
	}).(OrganizationDcPtrOutput)
}

// The created time.
func (o OrganizationDcOutput) Created() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationDc) *string { return v.Created }).(pulumi.StringPtrOutput)
}

// The modified time.
func (o OrganizationDcOutput) Modified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationDc) *string { return v.Modified }).(pulumi.StringPtrOutput)
}

type OrganizationDcPtrOutput struct{ *pulumi.OutputState }

func (OrganizationDcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationDc)(nil)).Elem()
}

func (o OrganizationDcPtrOutput) ToOrganizationDcPtrOutput() OrganizationDcPtrOutput {
	return o
}

func (o OrganizationDcPtrOutput) ToOrganizationDcPtrOutputWithContext(ctx context.Context) OrganizationDcPtrOutput {
	return o
}

func (o OrganizationDcPtrOutput) Elem() OrganizationDcOutput {
	return o.ApplyT(func(v *OrganizationDc) OrganizationDc {
		if v != nil {
			return *v
		}
		var ret OrganizationDc
		return ret
	}).(OrganizationDcOutput)
}

// The created time.
func (o OrganizationDcPtrOutput) Created() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationDc) *string {
		if v == nil {
			return nil
		}
		return v.Created
	}).(pulumi.StringPtrOutput)
}

// The modified time.
func (o OrganizationDcPtrOutput) Modified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationDc) *string {
		if v == nil {
			return nil
		}
		return v.Modified
	}).(pulumi.StringPtrOutput)
}

type ProjectDc struct {
	// The created time.
	Created *string `pulumi:"created"`
	// The modified time.
	Modified *string `pulumi:"modified"`
}

// ProjectDcInput is an input type that accepts ProjectDcArgs and ProjectDcOutput values.
// You can construct a concrete instance of `ProjectDcInput` via:
//
//	ProjectDcArgs{...}
type ProjectDcInput interface {
	pulumi.Input

	ToProjectDcOutput() ProjectDcOutput
	ToProjectDcOutputWithContext(context.Context) ProjectDcOutput
}

type ProjectDcArgs struct {
	// The created time.
	Created pulumi.StringPtrInput `pulumi:"created"`
	// The modified time.
	Modified pulumi.StringPtrInput `pulumi:"modified"`
}

func (ProjectDcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDc)(nil)).Elem()
}

func (i ProjectDcArgs) ToProjectDcOutput() ProjectDcOutput {
	return i.ToProjectDcOutputWithContext(context.Background())
}

func (i ProjectDcArgs) ToProjectDcOutputWithContext(ctx context.Context) ProjectDcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDcOutput)
}

func (i ProjectDcArgs) ToProjectDcPtrOutput() ProjectDcPtrOutput {
	return i.ToProjectDcPtrOutputWithContext(context.Background())
}

func (i ProjectDcArgs) ToProjectDcPtrOutputWithContext(ctx context.Context) ProjectDcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDcOutput).ToProjectDcPtrOutputWithContext(ctx)
}

// ProjectDcPtrInput is an input type that accepts ProjectDcArgs, ProjectDcPtr and ProjectDcPtrOutput values.
// You can construct a concrete instance of `ProjectDcPtrInput` via:
//
//	        ProjectDcArgs{...}
//
//	or:
//
//	        nil
type ProjectDcPtrInput interface {
	pulumi.Input

	ToProjectDcPtrOutput() ProjectDcPtrOutput
	ToProjectDcPtrOutputWithContext(context.Context) ProjectDcPtrOutput
}

type projectDcPtrType ProjectDcArgs

func ProjectDcPtr(v *ProjectDcArgs) ProjectDcPtrInput {
	return (*projectDcPtrType)(v)
}

func (*projectDcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDc)(nil)).Elem()
}

func (i *projectDcPtrType) ToProjectDcPtrOutput() ProjectDcPtrOutput {
	return i.ToProjectDcPtrOutputWithContext(context.Background())
}

func (i *projectDcPtrType) ToProjectDcPtrOutputWithContext(ctx context.Context) ProjectDcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDcPtrOutput)
}

type ProjectDcOutput struct{ *pulumi.OutputState }

func (ProjectDcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDc)(nil)).Elem()
}

func (o ProjectDcOutput) ToProjectDcOutput() ProjectDcOutput {
	return o
}

func (o ProjectDcOutput) ToProjectDcOutputWithContext(ctx context.Context) ProjectDcOutput {
	return o
}

func (o ProjectDcOutput) ToProjectDcPtrOutput() ProjectDcPtrOutput {
	return o.ToProjectDcPtrOutputWithContext(context.Background())
}

func (o ProjectDcOutput) ToProjectDcPtrOutputWithContext(ctx context.Context) ProjectDcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectDc) *ProjectDc {
		return &v
	}).(ProjectDcPtrOutput)
}

// The created time.
func (o ProjectDcOutput) Created() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDc) *string { return v.Created }).(pulumi.StringPtrOutput)
}

// The modified time.
func (o ProjectDcOutput) Modified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDc) *string { return v.Modified }).(pulumi.StringPtrOutput)
}

type ProjectDcPtrOutput struct{ *pulumi.OutputState }

func (ProjectDcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDc)(nil)).Elem()
}

func (o ProjectDcPtrOutput) ToProjectDcPtrOutput() ProjectDcPtrOutput {
	return o
}

func (o ProjectDcPtrOutput) ToProjectDcPtrOutputWithContext(ctx context.Context) ProjectDcPtrOutput {
	return o
}

func (o ProjectDcPtrOutput) Elem() ProjectDcOutput {
	return o.ApplyT(func(v *ProjectDc) ProjectDc {
		if v != nil {
			return *v
		}
		var ret ProjectDc
		return ret
	}).(ProjectDcOutput)
}

// The created time.
func (o ProjectDcPtrOutput) Created() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDc) *string {
		if v == nil {
			return nil
		}
		return v.Created
	}).(pulumi.StringPtrOutput)
}

// The modified time.
func (o ProjectDcPtrOutput) Modified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDc) *string {
		if v == nil {
			return nil
		}
		return v.Modified
	}).(pulumi.StringPtrOutput)
}

type GetClusterDc struct {
	// The created time.
	Created string `pulumi:"created"`
	// The modified time.
	Modified string `pulumi:"modified"`
}

// GetClusterDcInput is an input type that accepts GetClusterDcArgs and GetClusterDcOutput values.
// You can construct a concrete instance of `GetClusterDcInput` via:
//
//	GetClusterDcArgs{...}
type GetClusterDcInput interface {
	pulumi.Input

	ToGetClusterDcOutput() GetClusterDcOutput
	ToGetClusterDcOutputWithContext(context.Context) GetClusterDcOutput
}

type GetClusterDcArgs struct {
	// The created time.
	Created pulumi.StringInput `pulumi:"created"`
	// The modified time.
	Modified pulumi.StringInput `pulumi:"modified"`
}

func (GetClusterDcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDc)(nil)).Elem()
}

func (i GetClusterDcArgs) ToGetClusterDcOutput() GetClusterDcOutput {
	return i.ToGetClusterDcOutputWithContext(context.Background())
}

func (i GetClusterDcArgs) ToGetClusterDcOutputWithContext(ctx context.Context) GetClusterDcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDcOutput)
}

type GetClusterDcOutput struct{ *pulumi.OutputState }

func (GetClusterDcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDc)(nil)).Elem()
}

func (o GetClusterDcOutput) ToGetClusterDcOutput() GetClusterDcOutput {
	return o
}

func (o GetClusterDcOutput) ToGetClusterDcOutputWithContext(ctx context.Context) GetClusterDcOutput {
	return o
}

// The created time.
func (o GetClusterDcOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDc) string { return v.Created }).(pulumi.StringOutput)
}

// The modified time.
func (o GetClusterDcOutput) Modified() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDc) string { return v.Modified }).(pulumi.StringOutput)
}

type GetClusterHardwareSpecs struct {
	// The cpus per node.
	CpusPerNode int `pulumi:"cpusPerNode"`
	// The disk size per node in bytes.
	DiskSizePerNodeBytes int `pulumi:"diskSizePerNodeBytes"`
	// The disk type.
	DiskType string `pulumi:"diskType"`
	// The disks per node.
	DisksPerNode int `pulumi:"disksPerNode"`
	// The heap size in bytes.
	HeapSizeBytes int `pulumi:"heapSizeBytes"`
	// The memory per node in bytes.
	MemoryPerNodeBytes int `pulumi:"memoryPerNodeBytes"`
}

// GetClusterHardwareSpecsInput is an input type that accepts GetClusterHardwareSpecsArgs and GetClusterHardwareSpecsOutput values.
// You can construct a concrete instance of `GetClusterHardwareSpecsInput` via:
//
//	GetClusterHardwareSpecsArgs{...}
type GetClusterHardwareSpecsInput interface {
	pulumi.Input

	ToGetClusterHardwareSpecsOutput() GetClusterHardwareSpecsOutput
	ToGetClusterHardwareSpecsOutputWithContext(context.Context) GetClusterHardwareSpecsOutput
}

type GetClusterHardwareSpecsArgs struct {
	// The cpus per node.
	CpusPerNode pulumi.IntInput `pulumi:"cpusPerNode"`
	// The disk size per node in bytes.
	DiskSizePerNodeBytes pulumi.IntInput `pulumi:"diskSizePerNodeBytes"`
	// The disk type.
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// The disks per node.
	DisksPerNode pulumi.IntInput `pulumi:"disksPerNode"`
	// The heap size in bytes.
	HeapSizeBytes pulumi.IntInput `pulumi:"heapSizeBytes"`
	// The memory per node in bytes.
	MemoryPerNodeBytes pulumi.IntInput `pulumi:"memoryPerNodeBytes"`
}

func (GetClusterHardwareSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterHardwareSpecs)(nil)).Elem()
}

func (i GetClusterHardwareSpecsArgs) ToGetClusterHardwareSpecsOutput() GetClusterHardwareSpecsOutput {
	return i.ToGetClusterHardwareSpecsOutputWithContext(context.Background())
}

func (i GetClusterHardwareSpecsArgs) ToGetClusterHardwareSpecsOutputWithContext(ctx context.Context) GetClusterHardwareSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterHardwareSpecsOutput)
}

type GetClusterHardwareSpecsOutput struct{ *pulumi.OutputState }

func (GetClusterHardwareSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterHardwareSpecs)(nil)).Elem()
}

func (o GetClusterHardwareSpecsOutput) ToGetClusterHardwareSpecsOutput() GetClusterHardwareSpecsOutput {
	return o
}

func (o GetClusterHardwareSpecsOutput) ToGetClusterHardwareSpecsOutputWithContext(ctx context.Context) GetClusterHardwareSpecsOutput {
	return o
}

// The cpus per node.
func (o GetClusterHardwareSpecsOutput) CpusPerNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterHardwareSpecs) int { return v.CpusPerNode }).(pulumi.IntOutput)
}

// The disk size per node in bytes.
func (o GetClusterHardwareSpecsOutput) DiskSizePerNodeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterHardwareSpecs) int { return v.DiskSizePerNodeBytes }).(pulumi.IntOutput)
}

// The disk type.
func (o GetClusterHardwareSpecsOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterHardwareSpecs) string { return v.DiskType }).(pulumi.StringOutput)
}

// The disks per node.
func (o GetClusterHardwareSpecsOutput) DisksPerNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterHardwareSpecs) int { return v.DisksPerNode }).(pulumi.IntOutput)
}

// The heap size in bytes.
func (o GetClusterHardwareSpecsOutput) HeapSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterHardwareSpecs) int { return v.HeapSizeBytes }).(pulumi.IntOutput)
}

// The memory per node in bytes.
func (o GetClusterHardwareSpecsOutput) MemoryPerNodeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterHardwareSpecs) int { return v.MemoryPerNodeBytes }).(pulumi.IntOutput)
}

type GetClusterHealth struct {
	// The last seen time.
	LastSeen string `pulumi:"lastSeen"`
	// The type of the currently running operation. Returns an empty string if there is no operation in progress.
	RunningOperation string `pulumi:"runningOperation"`
	// The health status of the cluster.
	Status string `pulumi:"status"`
}

// GetClusterHealthInput is an input type that accepts GetClusterHealthArgs and GetClusterHealthOutput values.
// You can construct a concrete instance of `GetClusterHealthInput` via:
//
//	GetClusterHealthArgs{...}
type GetClusterHealthInput interface {
	pulumi.Input

	ToGetClusterHealthOutput() GetClusterHealthOutput
	ToGetClusterHealthOutputWithContext(context.Context) GetClusterHealthOutput
}

type GetClusterHealthArgs struct {
	// The last seen time.
	LastSeen pulumi.StringInput `pulumi:"lastSeen"`
	// The type of the currently running operation. Returns an empty string if there is no operation in progress.
	RunningOperation pulumi.StringInput `pulumi:"runningOperation"`
	// The health status of the cluster.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetClusterHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterHealth)(nil)).Elem()
}

func (i GetClusterHealthArgs) ToGetClusterHealthOutput() GetClusterHealthOutput {
	return i.ToGetClusterHealthOutputWithContext(context.Background())
}

func (i GetClusterHealthArgs) ToGetClusterHealthOutputWithContext(ctx context.Context) GetClusterHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterHealthOutput)
}

type GetClusterHealthOutput struct{ *pulumi.OutputState }

func (GetClusterHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterHealth)(nil)).Elem()
}

func (o GetClusterHealthOutput) ToGetClusterHealthOutput() GetClusterHealthOutput {
	return o
}

func (o GetClusterHealthOutput) ToGetClusterHealthOutputWithContext(ctx context.Context) GetClusterHealthOutput {
	return o
}

// The last seen time.
func (o GetClusterHealthOutput) LastSeen() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterHealth) string { return v.LastSeen }).(pulumi.StringOutput)
}

// The type of the currently running operation. Returns an empty string if there is no operation in progress.
func (o GetClusterHealthOutput) RunningOperation() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterHealth) string { return v.RunningOperation }).(pulumi.StringOutput)
}

// The health status of the cluster.
func (o GetClusterHealthOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterHealth) string { return v.Status }).(pulumi.StringOutput)
}

type GetClusterIpWhitelist struct {
	// The CIDR.
	Cidr string `pulumi:"cidr"`
	// The description.
	Description string `pulumi:"description"`
}

// GetClusterIpWhitelistInput is an input type that accepts GetClusterIpWhitelistArgs and GetClusterIpWhitelistOutput values.
// You can construct a concrete instance of `GetClusterIpWhitelistInput` via:
//
//	GetClusterIpWhitelistArgs{...}
type GetClusterIpWhitelistInput interface {
	pulumi.Input

	ToGetClusterIpWhitelistOutput() GetClusterIpWhitelistOutput
	ToGetClusterIpWhitelistOutputWithContext(context.Context) GetClusterIpWhitelistOutput
}

type GetClusterIpWhitelistArgs struct {
	// The CIDR.
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// The description.
	Description pulumi.StringInput `pulumi:"description"`
}

func (GetClusterIpWhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIpWhitelist)(nil)).Elem()
}

func (i GetClusterIpWhitelistArgs) ToGetClusterIpWhitelistOutput() GetClusterIpWhitelistOutput {
	return i.ToGetClusterIpWhitelistOutputWithContext(context.Background())
}

func (i GetClusterIpWhitelistArgs) ToGetClusterIpWhitelistOutputWithContext(ctx context.Context) GetClusterIpWhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIpWhitelistOutput)
}

// GetClusterIpWhitelistArrayInput is an input type that accepts GetClusterIpWhitelistArray and GetClusterIpWhitelistArrayOutput values.
// You can construct a concrete instance of `GetClusterIpWhitelistArrayInput` via:
//
//	GetClusterIpWhitelistArray{ GetClusterIpWhitelistArgs{...} }
type GetClusterIpWhitelistArrayInput interface {
	pulumi.Input

	ToGetClusterIpWhitelistArrayOutput() GetClusterIpWhitelistArrayOutput
	ToGetClusterIpWhitelistArrayOutputWithContext(context.Context) GetClusterIpWhitelistArrayOutput
}

type GetClusterIpWhitelistArray []GetClusterIpWhitelistInput

func (GetClusterIpWhitelistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIpWhitelist)(nil)).Elem()
}

func (i GetClusterIpWhitelistArray) ToGetClusterIpWhitelistArrayOutput() GetClusterIpWhitelistArrayOutput {
	return i.ToGetClusterIpWhitelistArrayOutputWithContext(context.Background())
}

func (i GetClusterIpWhitelistArray) ToGetClusterIpWhitelistArrayOutputWithContext(ctx context.Context) GetClusterIpWhitelistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIpWhitelistArrayOutput)
}

type GetClusterIpWhitelistOutput struct{ *pulumi.OutputState }

func (GetClusterIpWhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIpWhitelist)(nil)).Elem()
}

func (o GetClusterIpWhitelistOutput) ToGetClusterIpWhitelistOutput() GetClusterIpWhitelistOutput {
	return o
}

func (o GetClusterIpWhitelistOutput) ToGetClusterIpWhitelistOutputWithContext(ctx context.Context) GetClusterIpWhitelistOutput {
	return o
}

// The CIDR.
func (o GetClusterIpWhitelistOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpWhitelist) string { return v.Cidr }).(pulumi.StringOutput)
}

// The description.
func (o GetClusterIpWhitelistOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpWhitelist) string { return v.Description }).(pulumi.StringOutput)
}

type GetClusterIpWhitelistArrayOutput struct{ *pulumi.OutputState }

func (GetClusterIpWhitelistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIpWhitelist)(nil)).Elem()
}

func (o GetClusterIpWhitelistArrayOutput) ToGetClusterIpWhitelistArrayOutput() GetClusterIpWhitelistArrayOutput {
	return o
}

func (o GetClusterIpWhitelistArrayOutput) ToGetClusterIpWhitelistArrayOutputWithContext(ctx context.Context) GetClusterIpWhitelistArrayOutput {
	return o
}

func (o GetClusterIpWhitelistArrayOutput) Index(i pulumi.IntInput) GetClusterIpWhitelistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterIpWhitelist {
		return vs[0].([]GetClusterIpWhitelist)[vs[1].(int)]
	}).(GetClusterIpWhitelistOutput)
}

type GetClusterLastAsyncOperation struct {
	// The DublinCore of the cluster.
	Dc GetClusterLastAsyncOperationDc `pulumi:"dc"`
	// The id of the last async operation.
	Id string `pulumi:"id"`
	// The status of the last async operation.
	Status string `pulumi:"status"`
	// The type of the last async operation.
	Type string `pulumi:"type"`
}

// GetClusterLastAsyncOperationInput is an input type that accepts GetClusterLastAsyncOperationArgs and GetClusterLastAsyncOperationOutput values.
// You can construct a concrete instance of `GetClusterLastAsyncOperationInput` via:
//
//	GetClusterLastAsyncOperationArgs{...}
type GetClusterLastAsyncOperationInput interface {
	pulumi.Input

	ToGetClusterLastAsyncOperationOutput() GetClusterLastAsyncOperationOutput
	ToGetClusterLastAsyncOperationOutputWithContext(context.Context) GetClusterLastAsyncOperationOutput
}

type GetClusterLastAsyncOperationArgs struct {
	// The DublinCore of the cluster.
	Dc GetClusterLastAsyncOperationDcInput `pulumi:"dc"`
	// The id of the last async operation.
	Id pulumi.StringInput `pulumi:"id"`
	// The status of the last async operation.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of the last async operation.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetClusterLastAsyncOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLastAsyncOperation)(nil)).Elem()
}

func (i GetClusterLastAsyncOperationArgs) ToGetClusterLastAsyncOperationOutput() GetClusterLastAsyncOperationOutput {
	return i.ToGetClusterLastAsyncOperationOutputWithContext(context.Background())
}

func (i GetClusterLastAsyncOperationArgs) ToGetClusterLastAsyncOperationOutputWithContext(ctx context.Context) GetClusterLastAsyncOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLastAsyncOperationOutput)
}

type GetClusterLastAsyncOperationOutput struct{ *pulumi.OutputState }

func (GetClusterLastAsyncOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLastAsyncOperation)(nil)).Elem()
}

func (o GetClusterLastAsyncOperationOutput) ToGetClusterLastAsyncOperationOutput() GetClusterLastAsyncOperationOutput {
	return o
}

func (o GetClusterLastAsyncOperationOutput) ToGetClusterLastAsyncOperationOutputWithContext(ctx context.Context) GetClusterLastAsyncOperationOutput {
	return o
}

// The DublinCore of the cluster.
func (o GetClusterLastAsyncOperationOutput) Dc() GetClusterLastAsyncOperationDcOutput {
	return o.ApplyT(func(v GetClusterLastAsyncOperation) GetClusterLastAsyncOperationDc { return v.Dc }).(GetClusterLastAsyncOperationDcOutput)
}

// The id of the last async operation.
func (o GetClusterLastAsyncOperationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLastAsyncOperation) string { return v.Id }).(pulumi.StringOutput)
}

// The status of the last async operation.
func (o GetClusterLastAsyncOperationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLastAsyncOperation) string { return v.Status }).(pulumi.StringOutput)
}

// The type of the last async operation.
func (o GetClusterLastAsyncOperationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLastAsyncOperation) string { return v.Type }).(pulumi.StringOutput)
}

type GetClusterLastAsyncOperationDc struct {
	// The created time.
	Created string `pulumi:"created"`
	// The modified time.
	Modified string `pulumi:"modified"`
}

// GetClusterLastAsyncOperationDcInput is an input type that accepts GetClusterLastAsyncOperationDcArgs and GetClusterLastAsyncOperationDcOutput values.
// You can construct a concrete instance of `GetClusterLastAsyncOperationDcInput` via:
//
//	GetClusterLastAsyncOperationDcArgs{...}
type GetClusterLastAsyncOperationDcInput interface {
	pulumi.Input

	ToGetClusterLastAsyncOperationDcOutput() GetClusterLastAsyncOperationDcOutput
	ToGetClusterLastAsyncOperationDcOutputWithContext(context.Context) GetClusterLastAsyncOperationDcOutput
}

type GetClusterLastAsyncOperationDcArgs struct {
	// The created time.
	Created pulumi.StringInput `pulumi:"created"`
	// The modified time.
	Modified pulumi.StringInput `pulumi:"modified"`
}

func (GetClusterLastAsyncOperationDcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLastAsyncOperationDc)(nil)).Elem()
}

func (i GetClusterLastAsyncOperationDcArgs) ToGetClusterLastAsyncOperationDcOutput() GetClusterLastAsyncOperationDcOutput {
	return i.ToGetClusterLastAsyncOperationDcOutputWithContext(context.Background())
}

func (i GetClusterLastAsyncOperationDcArgs) ToGetClusterLastAsyncOperationDcOutputWithContext(ctx context.Context) GetClusterLastAsyncOperationDcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLastAsyncOperationDcOutput)
}

type GetClusterLastAsyncOperationDcOutput struct{ *pulumi.OutputState }

func (GetClusterLastAsyncOperationDcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLastAsyncOperationDc)(nil)).Elem()
}

func (o GetClusterLastAsyncOperationDcOutput) ToGetClusterLastAsyncOperationDcOutput() GetClusterLastAsyncOperationDcOutput {
	return o
}

func (o GetClusterLastAsyncOperationDcOutput) ToGetClusterLastAsyncOperationDcOutputWithContext(ctx context.Context) GetClusterLastAsyncOperationDcOutput {
	return o
}

// The created time.
func (o GetClusterLastAsyncOperationDcOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLastAsyncOperationDc) string { return v.Created }).(pulumi.StringOutput)
}

// The modified time.
func (o GetClusterLastAsyncOperationDcOutput) Modified() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLastAsyncOperationDc) string { return v.Modified }).(pulumi.StringOutput)
}

type GetOrganizationDc struct {
	// The created time.
	Created string `pulumi:"created"`
	// The modified time.
	Modified string `pulumi:"modified"`
}

// GetOrganizationDcInput is an input type that accepts GetOrganizationDcArgs and GetOrganizationDcOutput values.
// You can construct a concrete instance of `GetOrganizationDcInput` via:
//
//	GetOrganizationDcArgs{...}
type GetOrganizationDcInput interface {
	pulumi.Input

	ToGetOrganizationDcOutput() GetOrganizationDcOutput
	ToGetOrganizationDcOutputWithContext(context.Context) GetOrganizationDcOutput
}

type GetOrganizationDcArgs struct {
	// The created time.
	Created pulumi.StringInput `pulumi:"created"`
	// The modified time.
	Modified pulumi.StringInput `pulumi:"modified"`
}

func (GetOrganizationDcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationDc)(nil)).Elem()
}

func (i GetOrganizationDcArgs) ToGetOrganizationDcOutput() GetOrganizationDcOutput {
	return i.ToGetOrganizationDcOutputWithContext(context.Background())
}

func (i GetOrganizationDcArgs) ToGetOrganizationDcOutputWithContext(ctx context.Context) GetOrganizationDcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationDcOutput)
}

type GetOrganizationDcOutput struct{ *pulumi.OutputState }

func (GetOrganizationDcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationDc)(nil)).Elem()
}

func (o GetOrganizationDcOutput) ToGetOrganizationDcOutput() GetOrganizationDcOutput {
	return o
}

func (o GetOrganizationDcOutput) ToGetOrganizationDcOutputWithContext(ctx context.Context) GetOrganizationDcOutput {
	return o
}

// The created time.
func (o GetOrganizationDcOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationDc) string { return v.Created }).(pulumi.StringOutput)
}

// The modified time.
func (o GetOrganizationDcOutput) Modified() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationDc) string { return v.Modified }).(pulumi.StringOutput)
}

type GetOrganizationsOrganization struct {
	// The DublinCore of the organization.
	Dc GetOrganizationsOrganizationDc `pulumi:"dc"`
	// The notification email used in the organization.
	Email string `pulumi:"email"`
	// The id of the organization.
	Id string `pulumi:"id"`
	// The name of the organization.
	Name string `pulumi:"name"`
	// Whether notifications enabled for the organization.
	NotificationsEnabled bool `pulumi:"notificationsEnabled"`
	// The support plan type used in the organization.
	PlanType int `pulumi:"planType"`
	// The project count in the organization.
	ProjectCount int `pulumi:"projectCount"`
	// The role FQN.
	RoleFqn string `pulumi:"roleFqn"`
}

// GetOrganizationsOrganizationInput is an input type that accepts GetOrganizationsOrganizationArgs and GetOrganizationsOrganizationOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationInput` via:
//
//	GetOrganizationsOrganizationArgs{...}
type GetOrganizationsOrganizationInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput
	ToGetOrganizationsOrganizationOutputWithContext(context.Context) GetOrganizationsOrganizationOutput
}

type GetOrganizationsOrganizationArgs struct {
	// The DublinCore of the organization.
	Dc GetOrganizationsOrganizationDcInput `pulumi:"dc"`
	// The notification email used in the organization.
	Email pulumi.StringInput `pulumi:"email"`
	// The id of the organization.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the organization.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether notifications enabled for the organization.
	NotificationsEnabled pulumi.BoolInput `pulumi:"notificationsEnabled"`
	// The support plan type used in the organization.
	PlanType pulumi.IntInput `pulumi:"planType"`
	// The project count in the organization.
	ProjectCount pulumi.IntInput `pulumi:"projectCount"`
	// The role FQN.
	RoleFqn pulumi.StringInput `pulumi:"roleFqn"`
}

func (GetOrganizationsOrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganization)(nil)).Elem()
}

func (i GetOrganizationsOrganizationArgs) ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput {
	return i.ToGetOrganizationsOrganizationOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationArgs) ToGetOrganizationsOrganizationOutputWithContext(ctx context.Context) GetOrganizationsOrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationOutput)
}

// GetOrganizationsOrganizationArrayInput is an input type that accepts GetOrganizationsOrganizationArray and GetOrganizationsOrganizationArrayOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationArrayInput` via:
//
//	GetOrganizationsOrganizationArray{ GetOrganizationsOrganizationArgs{...} }
type GetOrganizationsOrganizationArrayInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput
	ToGetOrganizationsOrganizationArrayOutputWithContext(context.Context) GetOrganizationsOrganizationArrayOutput
}

type GetOrganizationsOrganizationArray []GetOrganizationsOrganizationInput

func (GetOrganizationsOrganizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganization)(nil)).Elem()
}

func (i GetOrganizationsOrganizationArray) ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput {
	return i.ToGetOrganizationsOrganizationArrayOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationArray) ToGetOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationArrayOutput)
}

type GetOrganizationsOrganizationOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganization)(nil)).Elem()
}

func (o GetOrganizationsOrganizationOutput) ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput {
	return o
}

func (o GetOrganizationsOrganizationOutput) ToGetOrganizationsOrganizationOutputWithContext(ctx context.Context) GetOrganizationsOrganizationOutput {
	return o
}

// The DublinCore of the organization.
func (o GetOrganizationsOrganizationOutput) Dc() GetOrganizationsOrganizationDcOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) GetOrganizationsOrganizationDc { return v.Dc }).(GetOrganizationsOrganizationDcOutput)
}

// The notification email used in the organization.
func (o GetOrganizationsOrganizationOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Email }).(pulumi.StringOutput)
}

// The id of the organization.
func (o GetOrganizationsOrganizationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the organization.
func (o GetOrganizationsOrganizationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Name }).(pulumi.StringOutput)
}

// Whether notifications enabled for the organization.
func (o GetOrganizationsOrganizationOutput) NotificationsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) bool { return v.NotificationsEnabled }).(pulumi.BoolOutput)
}

// The support plan type used in the organization.
func (o GetOrganizationsOrganizationOutput) PlanType() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) int { return v.PlanType }).(pulumi.IntOutput)
}

// The project count in the organization.
func (o GetOrganizationsOrganizationOutput) ProjectCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) int { return v.ProjectCount }).(pulumi.IntOutput)
}

// The role FQN.
func (o GetOrganizationsOrganizationOutput) RoleFqn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.RoleFqn }).(pulumi.StringOutput)
}

type GetOrganizationsOrganizationArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganization)(nil)).Elem()
}

func (o GetOrganizationsOrganizationArrayOutput) ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationArrayOutput) ToGetOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationArrayOutput) Index(i pulumi.IntInput) GetOrganizationsOrganizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationsOrganization {
		return vs[0].([]GetOrganizationsOrganization)[vs[1].(int)]
	}).(GetOrganizationsOrganizationOutput)
}

type GetOrganizationsOrganizationDc struct {
	// The created time.
	Created string `pulumi:"created"`
	// The modified time.
	Modified string `pulumi:"modified"`
}

// GetOrganizationsOrganizationDcInput is an input type that accepts GetOrganizationsOrganizationDcArgs and GetOrganizationsOrganizationDcOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationDcInput` via:
//
//	GetOrganizationsOrganizationDcArgs{...}
type GetOrganizationsOrganizationDcInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationDcOutput() GetOrganizationsOrganizationDcOutput
	ToGetOrganizationsOrganizationDcOutputWithContext(context.Context) GetOrganizationsOrganizationDcOutput
}

type GetOrganizationsOrganizationDcArgs struct {
	// The created time.
	Created pulumi.StringInput `pulumi:"created"`
	// The modified time.
	Modified pulumi.StringInput `pulumi:"modified"`
}

func (GetOrganizationsOrganizationDcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganizationDc)(nil)).Elem()
}

func (i GetOrganizationsOrganizationDcArgs) ToGetOrganizationsOrganizationDcOutput() GetOrganizationsOrganizationDcOutput {
	return i.ToGetOrganizationsOrganizationDcOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationDcArgs) ToGetOrganizationsOrganizationDcOutputWithContext(ctx context.Context) GetOrganizationsOrganizationDcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationDcOutput)
}

type GetOrganizationsOrganizationDcOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationDcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganizationDc)(nil)).Elem()
}

func (o GetOrganizationsOrganizationDcOutput) ToGetOrganizationsOrganizationDcOutput() GetOrganizationsOrganizationDcOutput {
	return o
}

func (o GetOrganizationsOrganizationDcOutput) ToGetOrganizationsOrganizationDcOutputWithContext(ctx context.Context) GetOrganizationsOrganizationDcOutput {
	return o
}

// The created time.
func (o GetOrganizationsOrganizationDcOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganizationDc) string { return v.Created }).(pulumi.StringOutput)
}

// The modified time.
func (o GetOrganizationsOrganizationDcOutput) Modified() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganizationDc) string { return v.Modified }).(pulumi.StringOutput)
}

type GetProjectDc struct {
	// The created time.
	Created string `pulumi:"created"`
	// The modified time.
	Modified string `pulumi:"modified"`
}

// GetProjectDcInput is an input type that accepts GetProjectDcArgs and GetProjectDcOutput values.
// You can construct a concrete instance of `GetProjectDcInput` via:
//
//	GetProjectDcArgs{...}
type GetProjectDcInput interface {
	pulumi.Input

	ToGetProjectDcOutput() GetProjectDcOutput
	ToGetProjectDcOutputWithContext(context.Context) GetProjectDcOutput
}

type GetProjectDcArgs struct {
	// The created time.
	Created pulumi.StringInput `pulumi:"created"`
	// The modified time.
	Modified pulumi.StringInput `pulumi:"modified"`
}

func (GetProjectDcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectDc)(nil)).Elem()
}

func (i GetProjectDcArgs) ToGetProjectDcOutput() GetProjectDcOutput {
	return i.ToGetProjectDcOutputWithContext(context.Background())
}

func (i GetProjectDcArgs) ToGetProjectDcOutputWithContext(ctx context.Context) GetProjectDcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectDcOutput)
}

type GetProjectDcOutput struct{ *pulumi.OutputState }

func (GetProjectDcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectDc)(nil)).Elem()
}

func (o GetProjectDcOutput) ToGetProjectDcOutput() GetProjectDcOutput {
	return o
}

func (o GetProjectDcOutput) ToGetProjectDcOutputWithContext(ctx context.Context) GetProjectDcOutput {
	return o
}

// The created time.
func (o GetProjectDcOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectDc) string { return v.Created }).(pulumi.StringOutput)
}

// The modified time.
func (o GetProjectDcOutput) Modified() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectDc) string { return v.Modified }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDcInput)(nil)).Elem(), ClusterDcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDcPtrInput)(nil)).Elem(), ClusterDcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterHardwareSpecsInput)(nil)).Elem(), ClusterHardwareSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterHardwareSpecsPtrInput)(nil)).Elem(), ClusterHardwareSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterHealthInput)(nil)).Elem(), ClusterHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterHealthPtrInput)(nil)).Elem(), ClusterHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIpWhitelistInput)(nil)).Elem(), ClusterIpWhitelistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIpWhitelistArrayInput)(nil)).Elem(), ClusterIpWhitelistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationDcInput)(nil)).Elem(), OrganizationDcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationDcPtrInput)(nil)).Elem(), OrganizationDcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDcInput)(nil)).Elem(), ProjectDcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDcPtrInput)(nil)).Elem(), ProjectDcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterDcInput)(nil)).Elem(), GetClusterDcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterHardwareSpecsInput)(nil)).Elem(), GetClusterHardwareSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterHealthInput)(nil)).Elem(), GetClusterHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIpWhitelistInput)(nil)).Elem(), GetClusterIpWhitelistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIpWhitelistArrayInput)(nil)).Elem(), GetClusterIpWhitelistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLastAsyncOperationInput)(nil)).Elem(), GetClusterLastAsyncOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLastAsyncOperationDcInput)(nil)).Elem(), GetClusterLastAsyncOperationDcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationDcInput)(nil)).Elem(), GetOrganizationDcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationInput)(nil)).Elem(), GetOrganizationsOrganizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationArrayInput)(nil)).Elem(), GetOrganizationsOrganizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationDcInput)(nil)).Elem(), GetOrganizationsOrganizationDcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectDcInput)(nil)).Elem(), GetProjectDcArgs{})
	pulumi.RegisterOutputType(ClusterDcOutput{})
	pulumi.RegisterOutputType(ClusterDcPtrOutput{})
	pulumi.RegisterOutputType(ClusterHardwareSpecsOutput{})
	pulumi.RegisterOutputType(ClusterHardwareSpecsPtrOutput{})
	pulumi.RegisterOutputType(ClusterHealthOutput{})
	pulumi.RegisterOutputType(ClusterHealthPtrOutput{})
	pulumi.RegisterOutputType(ClusterIpWhitelistOutput{})
	pulumi.RegisterOutputType(ClusterIpWhitelistArrayOutput{})
	pulumi.RegisterOutputType(OrganizationDcOutput{})
	pulumi.RegisterOutputType(OrganizationDcPtrOutput{})
	pulumi.RegisterOutputType(ProjectDcOutput{})
	pulumi.RegisterOutputType(ProjectDcPtrOutput{})
	pulumi.RegisterOutputType(GetClusterDcOutput{})
	pulumi.RegisterOutputType(GetClusterHardwareSpecsOutput{})
	pulumi.RegisterOutputType(GetClusterHealthOutput{})
	pulumi.RegisterOutputType(GetClusterIpWhitelistOutput{})
	pulumi.RegisterOutputType(GetClusterIpWhitelistArrayOutput{})
	pulumi.RegisterOutputType(GetClusterLastAsyncOperationOutput{})
	pulumi.RegisterOutputType(GetClusterLastAsyncOperationDcOutput{})
	pulumi.RegisterOutputType(GetOrganizationDcOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationDcOutput{})
	pulumi.RegisterOutputType(GetProjectDcOutput{})
}
