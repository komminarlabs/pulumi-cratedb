// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * To retrieve an organization.
 */
export function getOrganization(args: GetOrganizationArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cratedb:index/getOrganization:getOrganization", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrganization.
 */
export interface GetOrganizationArgs {
    /**
     * The id of the organization.
     */
    id: string;
}

/**
 * A collection of values returned by getOrganization.
 */
export interface GetOrganizationResult {
    /**
     * The DublinCore of the organization.
     */
    readonly dc: outputs.GetOrganizationDc;
    /**
     * The notification email used in the organization.
     */
    readonly email: string;
    /**
     * The id of the organization.
     */
    readonly id: string;
    /**
     * The name of the organization.
     */
    readonly name: string;
    /**
     * Whether notifications enabled for the organization.
     */
    readonly notificationsEnabled: boolean;
    /**
     * The support plan type used in the organization.
     */
    readonly planType: number;
    /**
     * The project count in the organization.
     */
    readonly projectCount: number;
    /**
     * The role FQN.
     */
    readonly roleFqn: string;
}
/**
 * To retrieve an organization.
 */
export function getOrganizationOutput(args: GetOrganizationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOrganizationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cratedb:index/getOrganization:getOrganization", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrganization.
 */
export interface GetOrganizationOutputArgs {
    /**
     * The id of the organization.
     */
    id: pulumi.Input<string>;
}
